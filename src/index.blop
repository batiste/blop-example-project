import './style.scss' as style
import Component from 'blop'

// Function component example
UserListPage = (attributes) => {
  { state } = attributes
  <div class=style.container>
    <h1>state.pages.index.content</h1>
    <p>'Example project for the Blop language with SSR, express and webpack'</p>
    if state.users {
      <ul>
        for user in state.users: array {
          <li>user.name</li>
        }
      </ul>
    }
    <button class="btn btn-primary"
      on={ click: () => state.$.router.go('/404/not-found/') }>
        = 'Generate a 404'
    </button>
  </div>
}

// Class component example
class NotFoundPage extends Component {
  def render() {
    { state } = this.attributes
    <div class=style.container>
      <h1>'404 'state.reason''</h1>
      <p>'This page demonstrate basic routing'</p>
      <button class="btn btn-primary"
        on={ click: () => state.$.router.go('/') }>
          = 'Go back'
      </button>
    </div>
  }
}

class Animation extends Component {

  def constructor() {
    super(...arguments)
    this.x = 0
    this.y = 0
    this.runAnimation = false
    this.i = 0
  }

  def render(_attributes, children, _node) {
    <div style={ left: ''this.x'px', top: ''this.y'px', position: 'absolute' }>
      = children
    </div>
  }

  def animate() {
    this.i += 0.02
    this.x = (450) + 60 * Math.cos(this.i) - 60
    this.y = (300) + 60 * Math.sin(this.i) - 60
    this.runAnimation && window.requestAnimationFrame(() => this.animate())
    this.refresh()
  }

  def onMount() {
    this.runAnimation = true
    console.log('mount Animation')
    window.requestAnimationFrame(() => this.animate())
  }

  def onUnmount(_vnode) {
    console.log('unmount Animation')
    this.runAnimation = false
  }

}

Index = (state) => {
  if state.page == 'index' {
    <div>
      <UserListPage state />
      <Animation>'I am an animation'</Animation>
    </div>
  } else {
    <NotFoundPage state=state.pages.p404 />
  }
}


